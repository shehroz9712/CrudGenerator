<?php

declare(strict_types=1);

namespace App\Http\Controllers\{{ namespace }};

use App\Models\{{ baseName }};
use App\Http\Requests\{{ namespace }}{{ baseName }}Request;
use App\Repositories\Interfaces\{{ namespace }}{{ baseName }}RepositoryInterface;
use Illuminate\Http\RedirectResponse;
use Illuminate\View\View;

class {{ baseName }}Controller extends Controller
{
    public function __construct(
        protected readonly {{ namespace }}{{ baseName }}RepositoryInterface ${{ camelName }}Repository
    ) {}

    public function index(): View
    {
        $data = $this->{{ camelName }}Repository->getAll(request()->all());
        return view('{{ namespacePath }}{{ pluralSnake }}.index', compact('data'));
    }

    public function create(): View
    {
        return view('{{ namespacePath }}{{ pluralSnake }}.create');
    }

    public function store({{ baseName }}Request $request): RedirectResponse
    {
        $this->{{ camelName }}Repository->create($request->validated());
        return to_route('{{ pluralCamel }}.index')->with('success', '{{ baseName }} created successfully.');
    }

    public function show({{ baseName }} ${{ camelName }}): View
    {
        return view('{{ namespacePath }}{{ pluralSnake }}.show', compact('{{ camelName }}'));
    }

    public function edit({{ baseName }} ${{ camelName }}): View
    {
        return view('{{ namespacePath }}{{ pluralSnake }}.edit', compact('{{ camelName }}'));
    }

    public function update({{ baseName }}Request $request, {{ baseName }} ${{ camelName }}): RedirectResponse
    {
        $this->{{ camelName }}Repository->update(${{ camelName }}->id, $request->validated());
        return to_route('{{ pluralCamel }}.index')->with('success', '{{ baseName }} updated successfully.');
    }

    public function destroy({{ baseName }} ${{ camelName }}): RedirectResponse
    {
        $this->{{ camelName }}Repository->delete(${{ camelName }}->id);
        return to_route('{{ pluralCamel }}.index')->with('success', '{{ baseName }} deleted successfully.');
    }
}